// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// UDPService is an autogenerated mock type for the UDPService type
type UDPService struct {
	mock.Mock
}

// ReceiveMessage provides a mock function with given fields: buf, address, n
func (_m *UDPService) ReceiveMessage(buf []byte, address string, n int) (string, error) {
	ret := _m.Called(buf, address, n)

	var r0 string
	if rf, ok := ret.Get(0).(func([]byte, string, int) string); ok {
		r0 = rf(buf, address, n)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func([]byte, string, int) error); ok {
		r1 = rf(buf, address, n)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SendCloseMessages provides a mock function with given fields:
func (_m *UDPService) SendCloseMessages() {
	_m.Called()
}

// NewUDPService creates a new instance of UDPService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewUDPService(t testing.TB) *UDPService {
	mock := &UDPService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
