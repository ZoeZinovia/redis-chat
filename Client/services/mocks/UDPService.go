// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"

	viewmodels "redisChat/Client/services/viewmodels"
)

// UDPService is an autogenerated mock type for the UDPService type
type UDPService struct {
	mock.Mock
}

// GetAllMessages provides a mock function with given fields:
func (_m *UDPService) GetAllMessages() *viewmodels.UDPMessages {
	ret := _m.Called()

	var r0 *viewmodels.UDPMessages
	if rf, ok := ret.Get(0).(func() *viewmodels.UDPMessages); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*viewmodels.UDPMessages)
		}
	}

	return r0
}

// ReceiveMessage provides a mock function with given fields: buf, n
func (_m *UDPService) ReceiveMessage(buf []byte, n int) {
	_m.Called(buf, n)
}

// SendMessage provides a mock function with given fields: message
func (_m *UDPService) SendMessage(message *viewmodels.UDPMessage) error {
	ret := _m.Called(message)

	var r0 error
	if rf, ok := ret.Get(0).(func(*viewmodels.UDPMessage) error); ok {
		r0 = rf(message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewUDPService creates a new instance of UDPService. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewUDPService(t testing.TB) *UDPService {
	mock := &UDPService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
